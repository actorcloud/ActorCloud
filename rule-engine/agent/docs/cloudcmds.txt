0. Start emqx
1. Start pulsar
1.0: 
sudo bin/pulsar-daemon start zookeeper
@initialize cluster metadata - only at 1st
sudo bin/pulsar initialize-cluster-metadata --cluster pulsar-cluster-1 --zookeeper server1.emqxac.com:2181 --configuration-store server1.emqxac.com:2181 --web-service-url http://server1.emqxac.com:8080 --broker-service-url pulsar://server1.emqxac.com:6650
1.1 Start bookie on both machine on 2
sudo bin/pulsar-daemon start bookie
Test bookie
sudo bin/bookkeeper shell bookiesanity
1.2 Start broker on 2
sudo bin/pulsar-daemon start broker
1.3 Start discovery
sudo bin/pulsar-daemon start discovery

2. Start function
@first 
sudo java -cp /opt/stream/agent-0.1.0-jar-with-dependencies.jar com.emqx.stream.RunRuleManager register '{"id":"rule1","sql":"select * from (select * from actorcloud where device_id = '"'"'device_id_1'"'"') where payload$$temp > lastRow(payload$$temp)","actions":"rule1action"}'
sudo java -cp /opt/stream/agent-0.1.0-jar-with-dependencies.jar com.emqx.stream.RunRuleManager register '{"id":"rulesimple","sql":"select * from (select * from actorcloud where device_id = '"'"'device_id_1'"'"') where payload$$temp > 16 and payload$$hum > 19","actions":"rule1action"}'
sudo java -cp /opt/stream/agent-0.1.0-jar-with-dependencies.jar com.emqx.stream.RunRuleManager register '{"id":"rulesession","sql":"select * from (select * from actorcloud where device_id = '"'"'device_id_1'"'"') where payload$$temp > 16 and payload$$hum > 19 group by session(1000) having count(*) >= 4","actions":"rule1action"}' 

sudo bin/pulsar-admin functions create --fqfn public/default/rulesimple --className RuleFunction --jar /opt/stream/rule-function-0.1.0-jar-with-dependencies.jar --inputs actorcloud --userConfig '{"sql":"select * from (select * from actorcloud where device_id = '"'"'device_id_1'"'"') where payload$$temp > 16 and payload$$hum > 19","actions":"rulesimple"}' --parallelism 2

sudo bin/pulsar-admin functions create --fqfn public/default/rulesession --className RuleFunction --jar /opt/stream/rule-function-0.1.0-jar-with-dependencies.jar --inputs actorcloud --userConfig '{"sql":"select * from (select * from actorcloud where device_id = '"'"'device_id_1'"'"') where payload$$temp > 16 and payload$$hum > 19 group by session(1000) having count(*) >= 4","actions":"rulesession"}'

sudo bin/pulsar-admin functions create --fqfn public/default/ruleAll2DB --className RuleFunction --jar /opt/stream/rule-function-0.4.0-jar-with-dependencies.jar --inputs __actorcloud --userConfig '{"rule":'"'"'{"id":"rule1","sql":"select * from actorcloud","actions":{"db":{"columns":{"msgTime":"ts","topic":"topic","payload":"payload","deviceID":"device_id","tenantID":"tenant_id"}}}}'"'"'}' --parallelism 2

sudo bin/pulsar-admin functions create --fqfn public/default/sharedrule --className com.emqx.pulsar.functions.SharedRuleFunction --jar /opt/stream/rule-function-0.1.0-jar-with-dependencies.jar --inputs actorcloud --userConfig '{"serviceUrl":"pulsar://172.16.0.2:6650"}'
sudo bin/pulsar-admin functions create --fqfn public/default/sharedrule --className com.emqx.pulsar.functions.AsyncSharedRuleFunction --jar /opt/stream/rule-function-0.1.0-jar-with-dependencies.jar --inputs actorcloud --userConfig '{"serviceUrl":"pulsar://172.16.0.2:6650"}'

sudo bin/pulsar-admin functions getstatus --fqfn public/default/sharedrule2
sudo bin/pulsar-admin functions start --fqfn public/default/rulesimple
@later
sudo bin/pulsar-admin functions list

3. Start sink & source
@first
sudo /opt/apache-pulsar-2.2.0/bin/pulsar-admin sink create --className EMQXSink --archive /opt/stream/emqx-source-0.1.0.nar --tenant public --namespace default --name emqx_sink_actorcloud --inputs persistent://public/default/ruleaction --sinkConfig '{"brokerUrl":"tcp://172.16.0.4:1883","outputTopic":"acsink","ruleId":"actorcloud"}' --parallelism 2

@singleRule
sudo /opt/apache-pulsar-2.2.0/bin/pulsar-admin source create --className EMQXSource --archive /opt/stream/emqx-source-0.1.0.nar --tenant public --namespace default --name emqx_source_actorcloud --destinationTopicName persistent://public/default/actorcloud --sourceConfig '{"brokerUrl":"tcp://172.16.0.4:1883","inputTopics":"$queue/actorcloud","ruleId":"actorcloud"}' --parallelism 2

@sharedRule:
sudo /opt/apache-pulsar-2.2.0/bin/pulsar-admin source create --className EMQXSource --archive /opt/stream/emqx-source-0.1.0.nar --tenant public --namespace default --name emqx_source_acrule --destinationTopicName persistent://public/default/acrule --sourceConfig '{"brokerUrl":"tcp://172.16.0.4:1883","inputTopics":"acrule","ruleId":"acrule"}'

sudo bin/pulsar-admin functions restart --fqfn public/default/emqx_sink_actorcloud
sudo bin/pulsar-admin functions getstatus --fqfn public/default/emqx_sink_actorcloud
sudo bin/pulsar-admin functions getstatus --fqfn public/default/emqx_source_actorcloud
sudo bin/pulsar-admin functions getstatus --fqfn public/default/emqx_source_acrule

@each on 2(deprecated)
sudo nohup /opt/stream/acsource.sh > logs/acsource.log 2>&1 &

4. Test
sudo java -cp /opt/stream/client-0.1.0-jar-with-dependencies.jar client.actorCloud.MqttPublish tcp://172.16.0.4:1883
Add rule:
{"id":"rule1","sql":"select ts from actorcloud where payload$$temp > 16 and payload$$hum > 19","actions":"action1"}
{"id":"rule2","sql":"select payload,ts from (select * from actorcloud where device_id = 'device_id_1') where payload$$temp > lastRow(payload$$temp)","actions":"action2"}
{"id":"rule3","sql":"select payload,ts from (select * from actorcloud where __topic = 'actorcloud') where payload$$hum > lastRow(payload$$hum)","actions":"action3"}
{"id":"rule4","sql":"select ts from actorcloud where payload$$temp > 16 and payload$$hum > 19 group by session(1000) having count(*) >= 4","actions":"action4"}

https://pulsar.apache.org/docs/latest/deployment/Monitoring/
5. Dashboard
@First
docker build -t apachepulsar/pulsar-dashboard dashboard
docker run -p 80:80 -e SERVICE_URL=http://server1.emqxac.com:8080/ --network host apachepulsar/pulsar-dashboard 
@Each
docker ps -aq
docker ps start containerId
docker stop containerId
@Debug
docker exec -it 5bc0ecb88b27 /bin/bash

6. Prometheus & Grafana
Data at http://server1.emqxac.com:8000/metrics
@First https://prometheus.io/docs/prometheus/latest/getting_started/
prometheus.yml
static_configs:
      - targets: ['server1.emqxac.com:8000']
	  - targets: ['server2.emqxac.com:8000']
@Each 
./prometheus --config.file=prometheus.yml
@First
docker build -t apachepulsar/pulsar-grafana grafana
docker run -p3000:3000 -e PROMETHEUS_URL=http://localhost:9090/ --network host apachepulsar/pulsar-grafana:latest

pulsar_function__total_processed__count/60
pulsar_rate_in


sudo /opt/apache-pulsar-2.2.0/bin/pulsar-admin functions create --fqfn public/default/rule_function_rule3 --className RuleFunction --jar /opt/stream/rule-function-0.1.0-jar-with-dependencies.jar --inputs persistent://public/default/actorcloud --userConfig '{"sql":"select * from (select * from actorcloud where device_id = '"'"'device_id_1'"'"') where payload$$hum > lastRow(payload$$hum) group by session(1000) having count(*) >= 10","actions":"file"}'


sudo /opt/apache-pulsar-2.2.0/bin/pulsar-admin functions update --fqfn public/default/rule_function_rule3 --className RuleFunction --jar /opt/stream/rule-function-0.1.0-jar-with-dependencies.jar --inputs persistent://public/default/actorcloud --userConfig '{"sql":"select * from (select * from actorcloud where device_id = '"'"'device_id_1'"'"') where payload$$hum > lastRow(payload$$hum) group by session(1000) having count(*) >= 10","actions":"file"}'

sudo /opt/apache-pulsar-2.2.0/bin/pulsar-admin functions update --fqfn public/default/rule_function_rule1 --className RuleFunction --jar /opt/stream/rule-function-0.1.0-jar-with-dependencies.jar --inputs persistent://public/default/actorcloud --userConfig '{"sql":"select * from (select * from actorcloud where device_id = '"'"'device_id_1'"'"') where payload$$hum > lastRow(payload$$hum)","actions":"file2"}'

sudo /opt/apache-pulsar-2.2.0/bin/pulsar-admin functions restart --fqfn public/default/rule_function_rule1

sudo /opt/apache-pulsar-2.2.0/bin/pulsar-admin functions restart --fqfn public/default/rule_function_rule3 


sudo /opt/apache-pulsar-2.2.0/bin/pulsar-admin functions create --fqfn public/default/simplest --className exclamation.ExclamationFunction --jar /opt/stream/exclamation-0.0.1-SNAPSHOT-jar-with-dependencies.jar --inputs persistent://public/default/actorcloud

sudo /opt/apache-pulsar-2.2.0/bin/pulsar-admin functions getstatus --fqfn public/default/simplest

sudo /opt/apache-pulsar-2.2.0/bin/pulsar-admin functions delete --fqfn public/default/rule_function_rule3
sudo /opt/apache-pulsar-2.2.0/bin/pulsar-admin functions getstatus --fqfn public/default/rule_function_rule3

sudo bin/pulsar-admin functions trigger --name rule_function_rule3 --trigger-value "hello world"

sudo bin/pulsar-client consume persistent://public/default/ruleaction --subscription-name rulesub --num-messages 0
  
sudo bin/pulsar-client produce persistent://public/default/actorcloud --num-produce 1 --messages "Hello world"

ps -aux | grep "accloud.sh" 

sudo bin/pulsar-admin topics delete persistent://public/default/actorcloud
sudo bin/pulsar-admin topics subscriptions persistent://public/default/actorcloud
sudo bin/pulsar-admin topics unsubscribe persistent://public/default/actorcloud -s my-subscription
sudo bin/pulsar-admin topics stats persistent://public/default/actorcloud




pscp -P 2201 D:\data\accloud\dashboard.tar ubuntu@139.198.21.156:/opt/stream

sudo nohup /opt/stream/acsource.sh > logs/acsource.log 2>&1 &
14518



