export default {
  rules: {
    dataPoint: 'Data Point',
    dataPointRequired: 'Data Point is required',
    dataPointNotSame: 'The two data points used for comparison must not be the same',
    metric: 'Metric',
    expressionsMetric: 'Expressions Metric',
    metricRequired: 'Metric is required',
    product: 'Related Product',
    productRequired: 'Related Product is required',
    path: 'PATH',
    pathRequired: 'PATH is required',
    pathNotSame: 'The two PATHs used for comparison must not be the same',
    operator: 'Operator',
    compareType: 'Compare Type',
    staticValue: 'Static Value',
    staticValueRequired: 'Static Value is required',
    variableValue: 'Variable Value',
    variableValueRequired: 'Variable Value is required',
    relation: 'Relation',
    difference: 'Difference',
    businessRule: 'Business Rule',
    ruleName: 'Rule Name',
    ruleNameRequired: 'Rule Name is required',
    action: 'Action',
    actionRequired: 'Action is required',
    addAction: 'Add Action',
    frequency: 'Frequency',
    frequencyRequired: 'Frequency is required',
    everyTime: 'Triggered each time the condition is met',
    someTime: 'Triggered when the following conditions are met',
    someTimeItem: 'Triggered when the condition is {times} times in {period}{unitName}',
    continueTime: 'Triggered when conditions persist',
    continueTimeItem: 'Triggered when it lasts for {period}{unitName}',
    deployRequired: 'Please fill in the configuration value of the selected frequency',
    minute: 'minute',
    minuteLimit: 'Time must be within 1 to 1440 minutes',
    hour: 'hour',
    hourLimit: 'Time must be within 1 to 24 hours',
    device: 'Related Device',
    deviceRequired: 'Related Device is required',
    group: 'Related Group',
    groupRequired: 'Related Group is required',
    remark: 'Remark',
    remarkRequired: 'Remark is required',
    conditionType: 'Condition Type',
    conditionTypeRequired: 'Condition Type is required',
    condition: 'Condition',
    conditionRequired: 'Condition is required',
    setCondition: 'Set Condition',
    addCondition: 'Add Condition',
    editCondition: 'Edit Condition',
    unreported: 'Unreported Data',
    messageRule: 'Message Rule',
    messageRuleTips: "The message rule can send the data reported by the device under a product/group to the user's Webhook interface, database, and message queue.",
    ruleRelateType: 'Rule Relate Type',
    ruleRelateTypeRequired: 'Rule Relate Type is required',
    products: 'Product',
    groups: 'Group',
    productName: 'Product Name',
    groupName: 'Group Name',
    ruleType: 'Rule Type',
    ruleTypeRequired: 'Rule Type is required',
    read: 'Please read',
    document: 'the document',
    ruleDifference: ', to understand the difference between different rule types.',
    ruleUse: ', to understand the creation and use of rules.',
    webhookType: 'Webhook Type',
    webhookTypeRequired: 'Webhook Type is required',
    url: 'URL Address',
    urlRequired: 'Webhook URL is required',
    tokenRequired: 'Webhook Token is required',
    appId: 'Application ID',
    appIdRequired: 'Application ID is required',
    appKey: 'Application Key',
    appKeyRequired: 'Application Key is required',
    createUser: 'Create User',
    createAt: 'Create At',
    updateAt: 'Update At',
    interfaceStatus: 'Interface Status',
    verifySuccess: 'Verify Success',
    verifyFail: 'Verify Fail',
    Available: 'Verify Webhook interface availability',
    AvailableSuccess: 'Webhook interface verification succeeded',
    AvailableFail: 'Webhook interface is not available',
  },
  actions: {
    action: 'Action',
    actionName: 'Action Name',
    actionNameRequired: 'Action Name is required',
    actionType: 'Action Type',
    actionTypeRequired: 'Action Type is required',
    alertTitle: 'Alert Title',
    alertTitleRequired: 'Alert Title is required',
    alertContentRequired: 'Alert Content is required',
    email: 'Email',
    emailRequired: 'Email is required',
    emailTips: 'Multiple emails separated by commas',
    noticeTitle: 'Notice Title',
    noticeTitleRequired: 'Notice Title is required',
    noticeContent: 'Notice Content',
    noticeContentRequired: 'Notice Content is required',
    urlRequired: 'URL is required',
    tokenRequired: 'Token is required',
    publishType: 'Publish Object',
    publishTypeRequired: 'Publish Object is required',
    device: 'Device',
    group: 'Group',
    publishDevice: 'Publish Device',
    publishDeviceRequired: 'Publish Device is required',
    searchDevice: 'Search by Device Name',
    topic: 'Topic',
    controlType: 'Operation Type',
    controlTypeRequired: 'Operation Type is required',
    r: 'Read',
    w: 'Write',
    e: 'Execute',
    publishGroup: 'Publish Group',
    publishGroupRequired: 'Publish Group is required',
    publishContent: 'Publish Content',
    publishContentRequired: 'Publish Content is required',
    accessKeyRequired: 'Access Key is required',
    accessTokenRequired: 'Access Token is required',
    phone: 'Phone Number',
    phoneRequired: 'Phone Number is required',
    mqttTopic: 'MQTT Topic',
    mqttTopicRequired: 'MQTT Topic is required',
    createUser: 'Create User',
    createAt: 'Create At',
    description: 'Description',
    incorrectAddress: 'The {num} address is incorrect.',
    alertSeverityRequired: 'Alert Severity is required',
    titleRequired: 'Title is required',
    contentRequired: 'Content is required',
    itemEmpty: 'The device has no attributes',
  },
}
