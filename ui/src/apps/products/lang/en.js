export default {
  products: {
    product: 'Product',
    createProduct: 'Create Product',
    bindDevices: 'Bind Devices',
    productInfo: 'Product Info',
    productName: 'Product Name',
    productNameRequired: 'Product Name is required',
    deviceNum: 'Device',
    dataPoints: 'Data Points',
    dataPointName: 'Data Point Name',
    item: 'Items',
    dataStreams: 'Data Streams',
    dataStreamRequired: 'Data stream is required',
    application: 'Application',
    description: 'Description',
    productDescription: 'Product Description',
    descriptionRequired: 'Description is required',
    productID: 'Product ID',
    productType: 'Product Type',
    productTypeRequired: 'Product type is required',
    createUser: 'Creator',
    createAt: 'Create At',
    cloudProtocol: 'Cloud Protocol',
    cloudProtocolRequired: 'Cloud Cloud is required',
    gatewayProtocol: 'Gateway Protocol',
    gatewayProtocolRequired: 'Gateway Protocol is required',
    viewProductDetail: 'View product details',
    productCreateSuccess: 'Create Product Success',
    addGateway: 'Add Gateway',
    addDevice: 'Add Device',
    addCancel: 'Not Add',
    device: 'Device List',
    empty: 'You have not any products',
    createTips: 'Click on the top right corner to create',
    tai: '',
    ge: '',
    proxySubscriptions: 'Proxy Subscriptions',
    topic: 'Topic',
  },
  dataPoints: {
    selectDataPoint: 'Select Data Point',
    addDataPoint: 'Add Data Point',
    editDataPoint: 'Edit Data Point',
    viewDataPoint: 'View Data Point',
    dataPointNameRequired: 'Data Point is required',
    dataPointID: 'DataPoint ID',
    dataPointIDTips: 'Variable name for data transmission, support for English letters, numbers, and underline, starting with an English letter',
    dataPointIDRequired: 'DataPoint ID is required',
    pointDataType: 'Data Type',
    pointDataTypeRequired: 'Data Type is required',
    locationType: 'Location Type',
    locationTypeRequired: 'Location Type is required',
    registerAddr: 'Address',
    registerAddrRequired: 'Address is required',
    dataTransType: 'Data Transfer Type',
    dataTransTypeRequired: 'Data Transfer Type is required',
    unitName: 'Unit Name',
    unitSymbol: 'Unit Symbol',
    upperLimit: 'Data Range (upper limit)',
    lowerLimit: 'Data Range (lower limit)',
    dataStep: 'Data Step',
    enum: 'Enum',
    addEnum: 'Add Enum',
    enumValue: 'Enum Value',
    enumRepeat: 'Enum Value repeat',
    enumNotNull: 'Enum Value can not be empty',
    rawValue: 'Raw Value',
    rawValueRepeat: 'Raw Value repeat',
    rawValueNotNull: 'Raw Value can not be empty',
    faultValue: 'Fault Value',
    faultValueRequired: 'Fault Value is required',
    description: 'Remark',
    descriptionRequired: 'Remark is required',
    createUser: 'Create User',
    createAt: 'CreateAt',
    dataPointRequired: 'Data Point is required',
    containDataPoint: 'Contained DataPoint',
    view: 'Detail',
    edit: 'Edit',
    unbind: 'Unbind',
    dataPointUnbind: 'Unbind Data Point',
    unbindSuccess: 'Unbind Success',
    unbindTips: 'Make sure to remove the data point from the data stream ?',
  },
  dataStreams: {
    dataStream: 'Data Stream',
    streamName: 'Data Stream Name',
    streamNameRequired: 'Data Stream Name is required',
    streamType: 'Stream Type',
    streamTypeRequired: 'Stream Type is required',
    dataReport: 'Report Data',
    dataPublish: 'Publish Data',
    streamID: 'Stream ID',
    streamIDRequired: 'Stream ID is required',
    streamDataType: 'Data Type',
    streamDataTypeRequired: 'Data Type is required',
    topic: 'Data Stream Topic',
    topicRequired: 'Data Stream Topic is required',
    topicTips: 'Only supports input letters, numbers, _ / + - #',
    description: 'Remark',
    descriptionRequired: 'Remark is required',
    streamCreateSuccess: 'Create Data Stream Success',
    addCancel: 'Not Add',
  },
  codec: {
    codec: 'Codec Plugin',
    editScript: 'Edit Script',
    run: 'Run',
    runResult: 'Run Result',
    save: 'Save',
    input: 'Analog input',
    inputTips: 'The analog data can be: binary, string, JSON',
    analogType: 'Analog Type: ',
    dataReport: 'Report Data',
    dataPublish: 'Publish Data',
    topic: 'Topic: ',
    message: 'Message: ',
    success: 'Success',
    failed: 'Failed',
    codeRequired: 'Code is required',
    topicRequired: 'Topic is required',
    inputRequired: 'Message is required',
    submitSuccess: 'Submit Success',
    updateSuccess: 'Update Success',
  },
  definition: {
    definition: 'Definition',
    decode: 'Decode',
    viewDecode: 'View Decode',
    decodeTips: 'Note: The return message format of the codec plugin must be in the following JSON format',
  },
  items: {
    item: 'Item List',
    objectID: 'Object ID',
    objectIDReruired: 'Object ID is required',
    itemID: 'Item ID',
    itemIDRequired: 'Item ID is required',
    itemName: 'Item Name',
    itemType: 'Item Type',
    itemUnit: 'Unit',
    itemOperations: 'Item Operation',
    addItem: 'Add Item',
    itemRequired: 'Item is required',
    lwm2mItemRequired: 'This attribute is not defined by the L2M2M protocol standard',
  },
  profiles: {
    tenantName: 'Tenant Name',
    tenantType: 'Tenant Type',
    contactPhone: 'Phone',
    productName: 'Product Name',
    codeStatus: 'Review Status',
    reason: 'Reason',
    show: 'View Plugin',
    review: 'Review',
    iconText: 'хоб',
    reviewResult: 'Review Result',
    reviewResultRequired: 'Review Result is required',
    pass: 'Pass',
    fail: 'Fail',
    reviewOpinion: 'Review Opinion',
    opinionRequired: 'Review Opinion is required',
    success: 'Review Success',
    failReason: 'Fail Reason',
  },
}
